using {{project.name}}.Models;
using {{project.name}}.Views;
using System.Collections.ObjectModel;
using Xamarin.Forms;
using Xamarin.Forms.Xaml;

namespace {{project.name}}.Views.Loading
{
    [XamlCompilation(XamlCompilationOptions.Compile)]
	public partial class {{capitalize module.name}}LoadingView : ContentPage
	{
        private {{capitalize crudResource.name}} {{lowercase crudResource.name}};
        {{#each crudResource._entity._relations}}{{#equal type "m:m"}}{{#equal ./../crudResource._entity._id _ent1._id}}
        private ObservableCollection<{{capitalize _ent2.name}}> {{lowercase _ent2.name}}s;
        {{/equal}}{{/equal}}{{/each}}

		public {{capitalize module.name}}LoadingView ({{capitalize crudResource.name}} {{lowercase crudResource.name}}ToEdit)
		{
            {{lowercase crudResource.name}} = {{lowercase crudResource.name}}ToEdit;
            {{#each crudResource._entity._relations}}{{#equal type "m:m"}}{{#equal ./../crudResource._entity._id _ent1._id}}
            {{lowercase _ent2.name}}s = new ObservableCollection<{{capitalize _ent2.name}}>();
            {{/equal}}{{/equal}}{{/each}}
			InitializeComponent();
		}

        //Load data that will be used by {{capitalize crudResource.name}}Edit
        protected override async void OnAppearing()
        {
            if ({{lowercase crudResource.name}} != null)
            {
                {{#each crudResource._entity._relations}}{{#equal type "m:m"}}{{#equal ./../crudResource._entity._id _ent1._id}}
                foreach (string {{lowercase _ent2.name}}Id in {{lowercase ./../crudResource.name}}.{{capitalize name}})
                {
                     {{lowercase _ent2.name}}s.Add(await App. {{lowercase _ent2.name}}Service.GETId({{lowercase _ent2.name}}Id));
                }{{/equal}}{{/equal}}{{/each}}
                var masterDetailPage = App.Current.MainPage as MasterDetailPage;
                await masterDetailPage.Detail.Navigation.PushAsync(new {{capitalize crudResource.name}}Edit({{lowercase crudResource.name}}{{#each crudResource._entity._relations}}{{#equal type "m:m"}}{{#equal ./../crudResource._entity._id _ent1._id}},  {{lowercase _ent2.name}}s{{/equal}}{{/equal}}{{/each}}), false);
            }
            else
            {
                var masterDetailPage = App.Current.MainPage as MasterDetailPage;
                await masterDetailPage.Detail.Navigation.PushAsync(new {{capitalize crudResource.name}}Edit(null{{#each crudResource._entity._relations}}{{#equal type "m:m"}}{{#equal ./../crudResource._entity._id _ent1._id}}, null{{/equal}}{{/equal}}{{/each}}), false);
            }
            this.OnDisappearing();
        
        }
    }
}