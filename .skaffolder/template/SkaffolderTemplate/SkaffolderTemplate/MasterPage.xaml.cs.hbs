**** PROPERTIES SKAFFOLDER ****
{
    "forEachObj": "oneTime",
    "overwrite": false,
    "_partials": [
    {
        "name": "NotResourcesDetailPage",
        "tagFrom": "// Start Detail Page Elements Independent",
        "tagTo": "// End Detail Page Elements Independent",
        "template":"\t\t\t\t\tcase \"H o m e\":\n\t\t\t\t\t\t((MasterDetailPage)Application.Current.MainPage).Detail = new NavigationPage(new HomePage());\n\t\t\t\t\t\t((MasterDetailPage)Application.Current.MainPage).IsPresented = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"P r o f i l e\":\n\t\t\t\t\t\tViewModel.GetUserById.Execute(null);\n\t\t\t\t\t\t((MasterDetailPage)Application.Current.MainPage).IsPresented = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"M a n a g e U s e r s\":\n\t\t\t\t\t\t((MasterDetailPage)Application.Current.MainPage).Detail = new NavigationPage(new ManageUsers());\n\t\t\t\t\t\t((MasterDetailPage)Application.Current.MainPage).IsPresented = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"L o g o u t\":\n\t\t\t\t\t\t#region Delete all reference to UserLogged\n\t\t\t\t\t\tSettings.AuthenticationToken = \"\";\n\t\t\t\t\t\tSettings.CurrentUserRole = \"\";\n\t\t\t\t\t\tSettings.UserId = \"\";\n\t\t\t\t\t\tSettings.Password = \"\";\n\t\t\t\t\t\t#endregion\n\t\t\t\t\t\t((MasterDetailPage)Application.Current.MainPage).Detail = new NavigationPage(new LoginPage());\n\t\t\t\t\t\t((MasterDetailPage)Application.Current.MainPage).IsPresented = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t"
    }
    ]
}
**** END PROPERTIES SKAFFOLDER ****
using SkaffolderTemplate.Support;
using SkaffolderTemplate.ViewModels;
using SkaffolderTemplate.Views;
using SkaffolderTemplate.Views.List;
using System;
using Xamarin.Forms;
using Xamarin.Forms.Xaml;

namespace SkaffolderTemplate
{
    [XamlCompilation(XamlCompilationOptions.Compile)]
    public partial class MasterPage : MasterDetailPage
    {
        private MasterPageViewModel ViewModel
        {
            get
            {
                return BindingContext as MasterPageViewModel;
            }
            set
            {
                BindingContext = value;
            }
        }

        public MasterPage()
        {
            ViewModel = new MasterPageViewModel();
            InitializeComponent();
            Title = "MasterPage";
            Detail = new NavigationPage(new HomePage());
            IsPresented = false;
        }

        protected override void OnAppearing()
        {
            var app = App.Current as App;
            MessagingCenter.Subscribe<MasterPageViewModel, string>(this, Events.DetailPageChanged, (arg1, arg2) =>
            {
                switch (arg2)
                {
                    {{#each resources.0._resources}}{{#notEqual name "User"}}
                    case "{{capitalize name}}":
                        ((MasterDetailPage)Application.Current.MainPage).Detail = new NavigationPage(new {{capitalize name}}List());
                        ((MasterDetailPage)Application.Current.MainPage).IsPresented = false;
                        break;
                        {{/notEqual}}{{/each}}
                    // Start Detail Page Elements Independent

                    // End Detail Page Elements Independent
                }
            });
            base.OnAppearing();
        }

        protected override void OnDisappearing()
        {
            MessagingCenter.Unsubscribe<MasterPageViewModel, string>(this, "Detail");
            base.OnDisappearing();
        }

        private void Button_Clicked(object sender, EventArgs e)
        {
            ViewModel.SetDetailPage.Execute(sender as Button);
        }
    }
}
