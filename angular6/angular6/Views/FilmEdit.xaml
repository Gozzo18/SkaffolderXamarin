<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:customrenderer="clr-namespace:angular6.CustomRenderer"
             x:Class="angular6.Views.FilmEdit"
             Title="Film">
    <ContentPage.Resources>
        <ResourceDictionary>
            <Style x:Key="label" TargetType="Label">
                <Setter Property="Margin" Value="0,-3,0,0"/>
            </Style>
            <Style x:Key="entry" TargetType="Entry">
                <Setter Property="PlaceholderColor" Value="White"/>
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="Keyboard" Value="Text"/>
                <Setter Property="Margin" Value="0,-6,0,0"/>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <RelativeLayout>
            <Label x:Name="Subtitle" Text="Edit Film" FontSize="Large" TextColor="#7970F5"
                   RelativeLayout.XConstraint="{ConstraintExpression
                        Type=RelativeToParent,
                        Property=Width,
                        Factor=0.35}"
                   RelativeLayout.WidthConstraint="{ConstraintExpression
                        Type=RelativeToParent,
                        Property=Width,
                        Factor=1}"/>
            <Frame  x:Name="Data" BackgroundColor="#7970F5" CornerRadius="10"
                    RelativeLayout.YConstraint="{ConstraintExpression
                        Type=RelativeToView,
                        Property=Height,
                        ElementName=Subtitle,
                        Factor=1,
                        Constant=10}"
                    RelativeLayout.XConstraint="{ConstraintExpression
                        Type=RelativeToParent,
                        Property=Width,
                        Factor=0.1}"
                    RelativeLayout.WidthConstraint="{ConstraintExpression
                        Type=RelativeToParent,
                        Property=Width,
                        Factor=0.8}"
                    RelativeLayout.HeightConstraint="{ConstraintExpression
                        Type=RelativeToParent,
                        Property=Height,
                        Factor=0.8}">
                <StackLayout>
                    <ListView CachingStrategy="RecycleElement" x:Name="castInserted" ItemsSource="{Binding CastInserted}" ItemSelected="castInserted_ItemSelected" RowHeight="10" HeightRequest="220" HasUnevenRows="True" SeparatorVisibility="None">
                        <ListView.Header>
                            <StackLayout VerticalOptions="FillAndExpand"> 
                                <Picker x:Name="castPicker" IsVisible="False" ItemsSource="{Binding CastAvailable}" ItemDisplayBinding="{Binding Id}" SelectedIndexChanged="PickerCast_SelectedIndexChanged"/>                                
                                
                                <Label Text="Genre" Margin="3,0,0,0"/>
                                <Picker Title="Genre" TextColor="White" FontSize="Small" SelectedItem="{Binding Genre }" SelectedIndexChanged="PickerGenre_SelectedIndexChanged" Margin="0,-6,0,0">
                                    <Picker.ItemsSource>
                                        <x:Array Type="{x:Type x:String }">
                                            <x:String>Action</x:String>
                                            <x:String>Crime</x:String>
                                            <x:String>Fantasy</x:String>
                                            <x:String>Horror</x:String>
                                        </x:Array>
                                    </Picker.ItemsSource>
                                </Picker>
                                
                                <Label Text="Title" Margin="3,0,0,0"/>
                                <Entry Placeholder="Title" PlaceholderColor="White" FontSize="Small" Text="{Binding Title }"  TextColor="White" Unfocused="TitleEntry_Unfocused"  Margin="0,-6,0,0"/>
                                
                                <Label Text="Year" Margin="3,0,0,0"/>
                                <Entry Placeholder="Year" PlaceholderColor="White" FontSize="Small" Text="{Binding Year }" Keyboard = "Numeric" TextColor="White" Unfocused="YearEntry_Unfocused"  Margin="0,-6,0,0"/>
                                
                                
                                
                                <StackLayout Orientation="Horizontal" HorizontalOptions="StartAndExpand" VerticalOptions="Start" Margin="0,-5,0,0">
                                    <Label Text="Cast" VerticalOptions="Center" FontSize="Medium">
                                        <Label.GestureRecognizers>
                                            <TapGestureRecognizer Tapped="showCastPicker"/>
                                        </Label.GestureRecognizers>
                                    </Label>
                                    <Image Source="littleadd.png" VerticalOptions="End" WidthRequest="35" HeightRequest="35">
                                        <Image.GestureRecognizers>
                                            <TapGestureRecognizer Tapped="showCastPicker"/>
                                        </Image.GestureRecognizers>
                                    </Image>
                                </StackLayout>
                                
                            </StackLayout>
                        </ListView.Header>
                         
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <customrenderer:CustomViewCell>
                                    <StackLayout x:Name="Item" Orientation="Horizontal" Margin="0,-10,0,0">
                                        <Button Image="delete.png" BackgroundColor="Transparent" WidthRequest="30" BindingContext="{Binding Source={x:Reference castInserted}, Path=BindingContext}" Command="{Binding DeleteItemCommand}" CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}"/>
                                        <Label Text="{Binding Id}" TextColor="White" VerticalOptions="Center"/>
                                    </StackLayout>
                                </customrenderer:CustomViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        
                        <ListView.Footer>
                            <StackLayout>
                                
                                <Label Text="FilmMaker" Margin="12,0,0,0"/>
                                <Picker Title="FilmMaker" TextColor="White" FontSize="Small" ItemsSource="{Binding FilmMakersAvailable}" SelectedItem="{Binding FilmMaker, Mode=TwoWay}" ItemDisplayBinding="{Binding Id}" SelectedIndexChanged="PickerFilmMaker_SelectedIndexChanged"/>
                                <Label Text="{Binding ErrorMessage}" TextColor="Red" FontSize="Medium"/>
                                
                            </StackLayout>
                        </ListView.Footer>
                    </ListView>
                </StackLayout>
            </Frame>
            <StackLayout x:Name="Buttons" BackgroundColor="#7970F5" Orientation="Horizontal" HorizontalOptions="FillAndExpand"
                    RelativeLayout.YConstraint="{ConstraintExpression
                        Type=RelativeToParent,
                        Property=Height,
                        Factor=0.91}"
                    RelativeLayout.HeightConstraint="{ConstraintExpression
                        Type=RelativeToParent,
                        Property=Height,
                        Factor=0.2}"
                    RelativeLayout.WidthConstraint="{ConstraintExpression
                        Type=RelativeToParent,
                        Property=Width,
                        Factor=1}">
                <Button Style="{StaticResource editPageButton}" Text="Back To List" Command="{Binding BackCommand}"/>
                <Button Style="{StaticResource editPageButton}" Text="Save" HorizontalOptions="EndAndExpand" Command="{Binding SaveCommand}"/>
            </StackLayout>
        </RelativeLayout>
    </ContentPage.Content>
</ContentPage>